name: Deploy Frontend to K8s (No Ingress)

on:
  push:
    branches:
      - prod/master_cloud
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Frontend to K8s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:latest
          cache-to: type=inline

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_PRODUCTION }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl config set-cluster default --insecure-skip-tls-verify=true

      - name: Verify cluster connection
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy Frontend to K8s
        run: |
          DOCKER_REGISTRY="${{ secrets.DOCKER_USERNAME }}"
          IMAGE_TAG="${{ env.IMAGE_TAG }}"
          
          echo "ðŸš€ Deploying Frontend..."
          echo "  DOCKER_REGISTRY: $DOCKER_REGISTRY"
          echo "  IMAGE_TAG: $IMAGE_TAG"
          
          cat k8s/frontend.yaml | \
            sed "s|\${DOCKER_REGISTRY}|$DOCKER_REGISTRY|g" | \
            sed "s|\${IMAGE_TAG}|$IMAGE_TAG|g" | \
            kubectl apply -f -

      - name: Restart Deployment
        run: |
          echo "Restarting frontend deployment..."
          kubectl rollout restart deployment gamevault-frontend -n gamevault
          kubectl wait --for=condition=available deployment/gamevault-frontend -n gamevault --timeout=300s

      - name: Show Deployment Info
        run: |
          echo "## Frontend Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Namespace:** gamevault" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ secrets.DOCKER_USERNAME }}/frontend:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pods:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          kubectl get pods -n gamevault | grep frontend >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Services:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          kubectl get svc -n gamevault >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          NODEPORT=$(kubectl get svc gamevault-frontend -n gamevault -o jsonpath='{.spec.ports[0].nodePort}')
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Access URL:" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend:** http://${{ secrets.CLOUD_EC2_HOST }}:${NODEPORT}" >> $GITHUB_STEP_SUMMARY
